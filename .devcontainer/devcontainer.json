// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/typescript-node
{
	"name": "Node.js & TypeScript",
	// "build": {
	// 	"dockerfile": "Dockerfile",
	// 	// Update 'VARIANT' to pick a Node version: 18, 16, 14.
	// 	// Append -bullseye or -buster to pin to an OS version.
	// 	// Use -bullseye variants on local on arm64/Apple Silicon.
	// 	"args": { 
	// 		"VARIANT": "16-bullseye"
	// 	}
	// },
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	"dockerComposeFile": "docker-compose.yml",
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "app",
	// The 'workspaceFolder' property is the path VS Code should open by default when
	// connected. Corresponds to a volume mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"dbaeumer.vscode-eslint"
			]
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "yarn install",
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "node"
}
// To access the container from outside VSCode, Use the following alias definition:
// alias docker-devcontainer='docker exec -it -w /workspace --env-file="$(pwd)/.devcontainer/devcontainer.env" $(docker ps --filter "name=$(basename $(pwd) | sed 's/\.//g')_devcontainer-app" --format "{{.ID}}") zsh'
// Run the command: docker-devcontainer